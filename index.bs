<pre class='metadata'>
Title: Media Capabilities
Repository: wicg/media-capabilities
Status: CG-DRAFT
ED: https://wicg.github.io/media-capabilities/
Shortname: media-capabilities
Level: 1
Group: wicg
Editor: Mounir Lamouri, w3cid 45389, Google Inc. https://google.com/

Abstract: This specification intends to provide APIs to allow websites to make
Abstract: an optimal decision when picking media content for the user. The APIs
Abstract: will expose information about the decoding capabilities for a given
Abstract: format but also output capabilities to find the best match based on
Abstract: the device's display.

!Participate: <a href='https://github.com/wicg/media-capabilities'>Git Repository.</a>
!Participate: <a href='https://github.com/wicg/media-capabilities/issues/new'>File an issue.</a>
!Version History: <a href='https://github.com/wicg/media-capabilities/commits'>https://github.com/wicg/media-capabilities/commits</a>
</pre>

<pre class='anchors'>
spec: media-source; urlPrefix: https://w3c.github.io/media-source/
    type: interface
        for: MediaSource; text: MediaSource; url: #media-source
    type: method
        for: MediaSource; text: isTypeSupported(); url: #dom-mediasource-istypesupported

spec: html; urlPrefix: https://html.spec.whatwg.org/multipage/;
    type: method
        urlPrefx: embedded-content.html/
            for: HTMLMediaElement; text: canPlayType(); url: #dom-navigator-canplaytype
</pre>

<pre class='biblio'>
{
    "media-playback-quality": {
        "href": "https://wicg.github.io/media-playback-quality/",
        "title": "Media Playback Quality Specification",
        "status": "CG-DRAFT",
        "publisher": "WICG"
    }
}
</pre>

<section class='non-normative'>
  <h2 id='introduction'>Introduction</h2>
  <em>This section is non-normative</em>

  <p>
    This specification relies on exposing the following sets of properties:
    <ul>
      <li>
        <p>
          An API to query the user agent with regards to the decoding abilities
          of the device based on information such as the codecs, profile,
          resolution, bitrates, etc. The API exposes information such as whether
          the playback should be smooth and power efficient.
        </p>
        <p>
          The intent of purposes of this decoding capabilities API is to provide
          a powerful replacement to API such as
          {{MediaSource/isTypeSupported()}} or
          {{HTMLMediaElement/canPlayType()}} which are vague and mostly help the
          callers to know if something can not be decoded but not how well it
          should perform.
        </p>
      </li>
      <li>
        <p>
          Better information about the display properties such as supported
          color gamut or dynamic range abilities in order to pick the right
          content for the display and avoid providing HDR content to an SDR
          display.
        </p>
      </li>
      <li>
        <p>
          Real time feedback about the playback so an adaptative streaming can
          alter the quality of the content based on actual user perceived
          quality. Such information will allow websites to react to a pick of
          CPU/GPU usage in real time. It is expected that this will be tacklked
          as part of the [[media-playback-quality]] specification.
        </p>
      </li>
    </ul>
  </p>
</section>

<section>
  <h2 id='decoding-capabilities'>Decoding Capabilities</h2>

  <section>
    <h3 id='media-configurations'>Media Configurations</h3>

    <section>
      <h4 id='mediaconfiguration'>MediaConfiguration</h4>

      <pre class='idl'>
        dictionary MediaConfiguration {
          required MediaConfigurationType type;

          VideoConfiguration video;
          AudioConfiguration audio;;
        };
      </pre>
      <p>
        The input to the decoding capabilities is represented by a
        {{MediaConfiguration}} dictionary.
      </p>
      <p>
        A <dfn>valid MediaConfiguration</dfn> MUST contain at least a
        {{VideoConfiguration}} or an {{AudioConfiguration}}.
      </p>
    </section>

    <section>
      <h4 id='mediaconfigurationtype'>MediaConfigurationType</h4>

      <pre class='idl'>
        enum MediaConfigurationType {
          "file",
          "MediaSource",
        };
      </pre>

      <p>
        A {{MediaConfiguration}} has two types:
        <ul>
          <li>{{MediaConfigurationType/file}} is used to represent a
          configuration that is meant to be used for a plain file playback.</li>
          <li>{{MediaConfigurationType/MediaSource}} is used to represent a
          configuration that is meant to be used for playback of a
          {{MediaSource/MediaSource}} as defined in the [[media-source]]
          specification. </li>
        </ul>
      </p>
    </section>

    <section>
      <h4 id='videoconfiguration'>VideoConfiguration</h4>

      <pre class='idl'>
        dictionary VideoConfiguration {
          required DOMString type;
          required unsigned long width;
          required unsigned long height;
          required unsigned long bitrate;
          required double framerate;
        };
      </pre>

      <p>
        The {{VideoConfiguration/type}} represents the MIME type of the video
        track.
      </p>

      <p>
        A <dfn>valid VideoConfiguration type</dfn> MUST include a media type,
        subtype and full codecs description.
      </p>

      <p>
        The {{VideoConfiguration/width}} and {{VideoConfiguration/height}}
        represent respectively the width and height of the video track.
      </p>

      <p>
        The {{VideoConfiguration/bitrate}} represents the number of average
        bitrate of the video track. The bitrate is the number of bits used to
        encode a second of the video track.
      </p>

      <p>
        The {{VideoConfiguration/framerate}} represents the framerate of the
        video track. The framerate is the number of frames used in one second
        (frames per second).
      </p>
    </section>

    <section>
      <h4 id='audioconfiguration'>AudioConfiguration</h4>

      <pre class='idl'>
        dictionary AudioConfiguration {
          required DOMString type;
          DOMString channels;
          unsigned long bitrate;
          unsigned long samplerate;
        };
      </pre>

      <p>
        The {{AudioConfiguration/type}} represents the MIME type of the audio
        track.
      </p>

      <p>
        A <dfn>valid AudioConfiguration type</dfn> MUST include a media type,
        subtype and full codecs description.
      </p>

      <p>
        The {{AudioConfiguration/bitrate}} represents the number of average
        bitrate of the audio track. The bitrate is the number of bits used to
        encode a second of the audio track.
      </p>

      <p>
        The {{AudioConfiguration/samplerate}} represents the samplerate of the
        audio track in. The samplerate is the number of samples of audio
        carried per second.
      </p>

      <p class='note'>
        The {{AudioConfiguration/samplerate}} is expressed in <code>Hz</code>
        (ie. number of samples of audio per second). Sometimes the samplerates
        value are expressed in <code>kHz</code> which represents the number of
        thousands of samples of audio per second.<br>
        44100 <code>Hz</code> is equivalent to 44.1 <code>kHz</code>.
      </p>
    </section>
  </section>
</section>

<section>
  <h2 id='display-capabilities'>Display Capabilities</h2>

  <p>
    TODO
  </p>
</section>
